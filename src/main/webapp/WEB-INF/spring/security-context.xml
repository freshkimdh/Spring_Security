<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    
    <!-- 검사 URL -->
    
    
    
    <!--여기 -->
    <http auto-config="true" use-expressions="true">
    	<!--admin으로 들어오는 모든 것은 권한을 가지고 있어야 한다. (hasRole)-->
    	<!--access 이 권한을 가진 사람만 접근한다.  -->
    	
    	<!--이 url로 치고 들어오는 권한을 가진 사람에게만 패스 시켜주겠다.  -->
    	<intercept-url pattern="/" access="permitAll" />
    	<intercept-url pattern="/login/loginForm" access="permitAll" />
    	<!--"/admin/**" 치고 들어오는 사람 중에, ADMIN 에게만 연결 시켜주겠다.  -->
        <intercept-url pattern="/admin/**" access="hasRole('ADMIN')" />
        <intercept-url pattern="/**" access="hasAnyRole('USER, ADMIN')" />
        
        
        <form-login login-page="/login/loginForm"
        			default-target-url="/"
        			authentication-failure-url="/login/loginForm?error"
        			username-parameter="id"
        			password-parameter="password"/>
        			
        <logout logout-url="/logout" logout-success-url="/"/>
        <!--쿠키 날리는 것 즉, session ID 날리는 것 --> 
        <access-denied-handler error-page="/login/accessDenied"/>
        
        <!--이것이 디폴트 로그인 페이지 생성 해주는 놈이다. 인증 하려는 login 페이지 --> <!-- <form-login/> 디폴트 -->
        
        <!--커스텀  -->
        <form-login login-page="/login/loginForm"/>
        
    </http>
    
    
    <!--권한-->
	<!-- provider --> 
	<authentication-manager>
		<authentication-provider> 
			<user-service> 
				<!--id, pw 가 동일한 사람에게 권한을 주겠다.  -->
				<user name="user" password="{noop}user" authorities="ROLE_USER" /> 
				<user name="admin" password="{noop}admin" authorities="ROLE_USER, ROLE_ADMIN" /> 
				<!--스프링 내부족으로 user-service 객체를 생성해서 메모리에 올린다.  -->
			</user-service> 
		</authentication-provider>	
	</authentication-manager>
    
    
</beans:beans>
